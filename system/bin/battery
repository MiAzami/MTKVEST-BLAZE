#!/bin/sh

# Enable specific CPUs
echo 0 > /sys/devices/system/cpu/cpu2/online
echo 0 > /sys/devices/system/cpu/cpu3/online

echo 2 1 > /proc/ppm/policy_status  # Disable FORCE_LIMIT
echo 3 1 > /proc/ppm/policy_status  # Disable PWR_THRO
echo 4 1 > /proc/ppm/policy_status  # Disable THERMAL
echo 7 1 > /proc/ppm/policy_status  # Disable USER_LIMIT
echo 9 0 > /proc/ppm/policy_status  # Enable SYS_BOOST

# Set CPU frequency governor to 'powersave'
for policy in /sys/devices/system/cpu/cpufreq/policy*; do
    if echo "powersave" > "$policy/scaling_governor"; then
        echo "Set governor for $policy to powersave"
    else
        echo "Failed to set governor for $policy"
    fi
done

# Set devfreq governor to 'powersave'
for device in /sys/class/devfreq/*; do
    if [ -f "$device/governor" ]; then
        if echo "powersave" > "$device/governor"; then
            echo "Set governor for $device to powersave"
        else
            echo "Failed to set governor for $device"
        fi
    fi
done

# Set GPU frequency
if [ -d /proc/gpufreq ]; then
    gpu_freq=$(grep -o 'freq = [0-9]*' /proc/gpufreq/gpufreq_opp_dump | sed 's/freq = //' | sort -nr | head -n 1)
    echo "$gpu_freq" > /proc/gpufreq/gpufreq_opp_freq
elif [ -d /proc/gpufreqv2 ]; then
    echo 0 > /proc/gpufreqv2/fix_target_opp_index
fi

# Modify PPM and other power settings
echo "coarse_demand" > /sys/class/misc/mali0/device/power_policy
echo 1 > /proc/ppm/enabled

# Check if the gpufreq_limit_table file exists and append settings
if [ -f "/proc/gpufreq/gpufreq_limit_table" ]; then
    {
        echo "ignore_batt_oc 0"
        echo "ignore_batt_percent 0"
        echo "ignore_batt_low 0"
        echo "ignore_thermal 0"
        echo "ignore_pbm 0"
    } >> /proc/gpufreq/gpufreq_limit_table
fi

# Set scheduler parameters
echo 1000 > /proc/sys/kernel/sched_migration_cost_ns
echo 75 > /proc/sys/kernel/perf_cpu_time_max_percent
echo 100000 > /proc/sys/kernel/sched_latency_ns
echo 256 > /proc/sys/kernel/sched_util_clamp_max
echo 100 > /proc/sys/kernel/sched_util_clamp_min
echo 1 > /proc/sys/kernel/sched_tunable_scaling
echo 1 > /proc/sys/kernel/sched_child_runs_first
echo 1 > /proc/sys/kernel/sched_energy_aware
echo 128 > /proc/sys/kernel/sched_util_clamp_min_rt_default
echo 4194304 > /proc/sys/kernel/sched_deadline_period_max_us
echo 100 > /proc/sys/kernel/sched_deadline_period_min_us
echo 0 > /proc/sys/kernel/sched_schedstats
echo 300000 > /proc/sys/kernel/sched_wakeup_granularity_ns
echo 30000 > /proc/sys/kernel/sched_min_granularity_ns

# Set block device parameters
for queue in /sys/block/*/queue; do
    echo 0 > "$queue/add_random"
    echo 0 > "$queue/iostats"
    echo 2 > "$queue/nomerges"
    echo 2 > "$queue/rq_affinity"
    echo 64 > "$queue/nr_requests"
    echo 512 > "$queue/read_ahead_kb"
    [ "$(cat "$queue/rotational")" -eq 0 ] && echo 0 > "$queue/rotational"
done

echo 0 > /dev/cpuctl/foreground/cpu.uclamp.min
echo 0 > /dev/cpuctl/top-app/cpu.uclamp.min
echo 0 > /dev/cpuctl/pnpmgr_fg/cpu.uclamp.min

# Set virtual memory settings
echo 15 > /proc/sys/vm/dirty_background_ratio
echo 30 > /proc/sys/vm/dirty_ratio
echo 60 > /proc/sys/vm/vfs_cache_pressure
echo 150 > /proc/sys/vm/dirty_expire_centisecs
echo 1000 > /proc/sys/vm/dirty_writeback_centisecs
echo 0 > /proc/sys/vm/oom_dump_tasks
echo 0 > /proc/sys/vm/page-cluster
echo 0 > /proc/sys/vm/block_dump
echo 10 > /proc/sys/vm/stat_interval
echo 0 > /proc/sys/vm/compaction_proactiveness
echo 1 > /proc/sys/vm/watermark_boost_factor
echo 10 > /proc/sys/vm/watermark_scale_factor
echo 2 > /proc/sys/vm/drop_caches
echo 80 > /proc/sys/vm/swappiness

# Set CPU set adjustments
for cs in /dev/cpuset
do
    echo 0-6 > "$cs/cpus"
    echo 0-2 > "$cs/background/cpus"
    echo 0-6 > "$cs/system-background/cpus"
    echo 0-6 > "$cs/foreground/cpus"
    echo 0-6 > "$cs/top-app/cpus"
    echo 0-2 > "$cs/restricted/cpus"
    echo 0-7 > "$cs/camera-daemon/cpus"
done

# Set Power Level settings
for pl in /sys/devices/system/cpu/perf
do
    echo 0 > "$pl/gpu_pmu_enable"
    echo 100000 > "$pl/gpu_pmu_period"
    echo 0 > "$pl/fuel_gauge_enable"
    echo 0 > "$pl/enable"
    echo 1 > "$pl/charger_enable"
done

# Disallow power saving mode for display
echo "1" > /proc/displowpower/hrt_lp
echo "1" > /proc/displowpower/idlevfp
echo "50" > /proc/displowpower/idletime

for path in /dev/stune/*; do
    base=$(basename "$path")
    
    if [[ "$base" == "top-app" || "$base" == "foreground" ]]; then
        echo 20 > "$path/schedtune.boost"
        echo 1 > "$path/schedtune.sched_boost_enabled"
    else
        echo 10 > "$path/schedtune.boost"
        echo 0 > "$path/schedtune.sched_boost_enabled"
    fi
    
    echo 0 > "$path/schedtune.prefer_idle"
    echo 0 > "$path/schedtune.colocate"
done
